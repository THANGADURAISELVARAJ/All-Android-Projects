 ItemTouchHelper(object : ItemTouchHelper.SimpleCallback(
                0,
                ItemTouchHelper.LEFT or ItemTouchHelper.RIGHT
            ) {
                override fun onMove(
                    recyclerView: RecyclerView,
                    viewHolder: RecyclerView.ViewHolder,
                    target: RecyclerView.ViewHolder
                ): Boolean {
                    return false
                }

                override fun onSwiped(viewHolder: RecyclerView.ViewHolder, direction: Int) {

                    Toast.makeText(context, "Note deleted", Toast.LENGTH_SHORT).show()
                }

                override fun onChildDraw(
                    c: Canvas,
                    recyclerView: RecyclerView,
                    viewHolder: RecyclerView.ViewHolder,
                    dX: Float,
                    dY: Float,
                    actionState: Int,
                    isCurrentlyActive: Boolean
                ) {

                    try {

                        val icon: Bitmap
                        val paint = Paint()
                        if (actionState == ItemTouchHelper.ACTION_STATE_SWIPE) {
                            val itemViews = viewHolder.itemView
                            val height = itemViews.bottom.toFloat() - itemViews.top.toFloat()
                            val width = height / 5
                            viewHolder.itemView.translationX = dX / 5

                            paint.setColor(Color.parseColor("#D32F2F"))
                            val background = RectF(
                                itemViews.right.toFloat() + dX / 5,
                                itemViews.top.toFloat(),
                                itemViews.right.toFloat(),
                                itemViews.bottom.toFloat()
                            )
                            c.drawRect(background, paint)
                            icon = context.resources.getDrawable(R.drawable.ic_launcher_background)
                                .toBitmap()
                            val icon_dest = RectF(
                                itemViews.right + dX / 7,
                                itemViews.top.toFloat() + width,
                                itemViews.right.toFloat() + dX / 20,
                                itemViews.bottom.toFloat() - width
                            )
                            c.drawBitmap(icon, null, icon_dest, paint)
                        } else {
                            super.onChildDraw(
                                c,
                                recyclerView,
                                viewHolder,
                                dX,
                                dY,
                                actionState,
                                isCurrentlyActive
                            )
                        }
                    } catch (e: Exception) {
                        e.printStackTrace()
                    }

                }

            }).onChildViewAttachedToWindow(itemViewHolder.nameChild)